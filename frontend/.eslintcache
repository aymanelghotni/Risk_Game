[{"/home/islam/project/AI/Risk/frontend/src/App.js":"1","/home/islam/project/AI/Risk/frontend/src/Reducer/MapReducer.js":"2","/home/islam/project/AI/Risk/frontend/src/components/Circle.js":"3","/home/islam/project/AI/Risk/frontend/src/index.js":"4","/home/islam/project/AI/Risk two/frontend/src/Reducer/MapReducer.js":"5","/home/islam/project/AI/Risk two/frontend/src/components/Circle.js":"6","/home/islam/project/AI/Risk two/frontend/src/App.js":"7","/home/islam/project/AI/Risk two/frontend/src/index.js":"8"},{"size":1639,"mtime":1608825520268,"results":"9","hashOfConfig":"10"},{"size":871,"mtime":1608824623815,"results":"11","hashOfConfig":"10"},{"size":328,"mtime":1608714596705,"results":"12","hashOfConfig":"10"},{"size":367,"mtime":1608790474633,"results":"13","hashOfConfig":"10"},{"size":871,"mtime":1608834880350,"results":"14","hashOfConfig":"15"},{"size":363,"mtime":1608935489788,"results":"16","hashOfConfig":"15"},{"size":2419,"mtime":1608970031699,"results":"17","hashOfConfig":"15"},{"size":367,"mtime":1608834880350,"results":"18","hashOfConfig":"15"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"tabrbz",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"6n6ohw",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/islam/project/AI/Risk/frontend/src/App.js",["39","40"],"/home/islam/project/AI/Risk/frontend/src/Reducer/MapReducer.js",["41","42"],"/home/islam/project/AI/Risk/frontend/src/components/Circle.js",[],"/home/islam/project/AI/Risk/frontend/src/index.js",[],["43","44"],"/home/islam/project/AI/Risk two/frontend/src/Reducer/MapReducer.js",["45","46"],"import React from 'react'\nimport map from '../map'\nconst {cities} = map\nconst initState =cities\nconst  mapReducer=(state=[] , action) => \n{\n  switch (action.type) {\n   case \"INIT\":\n   {\n     return initState;\n   }\n   case \"COLOR\":\n   \t{ console.log(action.data)\n      for(var i=0;i<state.length;i++)\n        {\n          state[i].color=action.data.data[i];\n        state[i].c=action.data.armies[i];\n      }\n   \t\treturn state.map(s=>s)\n   \t}\n    case \"COLOR_ONE\" :\n    { console.log(action.data)\n      return state.map(s=>{\n        if(s.id===action.data.id)\n        { s.color=action.data.color \n                 s.c=action.data.armies\n                }\n                return s })\n      \n    }\n    case \"CHANGE_ARMY\" :\n    {\nreturn state.map(s=>{\n      if(s.id===action.data.id)\n          s.c=action.data.armies\n        return s ;\n    })\n  }\n }\n}\nexport default mapReducer;",["47","48"],"/home/islam/project/AI/Risk two/frontend/src/components/Circle.js",[],"/home/islam/project/AI/Risk two/frontend/src/App.js",["49","50","51"],"import './App.css'; \nimport React, { useState,useEffect } from 'react';\nimport Circle from './components/Circle'\nimport counterReducer from './Reducer/MapReducer'\nimport { createStore } from 'redux'\nimport { useSelector, useDispatch, } from 'react-redux'\n\nlet socket = null\nconst App=()=> {\n    const[action,setAction]=useState(\"\");\n    const[attack,setAttack]=useState(\"\");\n    const[no,setNo]=useState(\"\");\n    const[added,setAdded]=useState(\"\");\n    if(!socket)\n     socket= new WebSocket('ws://localhost:8080')\n  // useEffect(() => {\n  //  socket.emit('HELLO_THERE');\n  const dispatch = useDispatch()\n  socket.onmessage = function(event){\n   console.log(event.data)\n   if(JSON.parse(event.data).type=== \"init\")\n    dispatch({type:'COLOR',data:JSON.parse(event.data).data})\n   \n   else if(JSON.parse(event.data).type===\"color\")\n    dispatch({type:'COLOR_ONE',data:JSON.parse(event.data).data});\n  \n   else if(JSON.parse(event.data).type===\"army\")\n    dispatch({type:'CHANGE_ARMY',data:JSON.parse(event.data).data});\n   else if(JSON.parse(event.data).type===\"string\")\n    setAction(JSON.parse(event.data).data) \n  }\n  const Click=(x)=>\n    {\n      var temp ={\n  attacker:attack,\nattacked:x,\narmies:no,\nadd:added\n\n      };\n      socket.send(JSON.stringify(temp))\n    }\n    const handleSubmit = (evt) => {\n      evt.preventDefault();\n  }\n   \n    //})\n  const cities = useSelector(state => state)\n  const store = createStore(counterReducer);\n if(!cities)\n    dispatch({ type: 'INIT' })\n  \n  return (\n    <div>\n      <label>\n       atacker\n        <input\n          type=\"text\"\n          onChange={e => setAttack(e.target.value)}\n        />\n      </label>\n        <label>\n    no:    <input\n          type=\"text\"\n          onChange={e => setNo(e.target.value)}\n        />\n      </label>\n       <label>\n       put armies:    <input\n          type=\"text\"\n          onChange={e => setAdded(e.target.value)}\n        />\n      </label>\n    \n      <t1>\n        {action}\n      </t1>\n    <div className=\"App\" >\n\n    {cities&&cities.map(m=><Circle key = {m.id} x={m.x} y= {m.y} color={m.color} Click={Click} r={m.r} id={m.id} count ={m.c} /> )}\n    <div className=\"but\"> \n    \n    </div>\n    </div>\n     </div>\n  )\n}\n\nexport default App;\n/*<button onClick={e => dispatch({ type: 'INIT' })}>\n     Initialise\n    </button>\n    <button onClick={e => dispatch({ type: 'COLOR',data:{id:1,color:'blue'} })}>\n     color\n    </button>\n    */","/home/islam/project/AI/Risk two/frontend/src/index.js",[],{"ruleId":"52","severity":1,"message":"53","line":2,"column":26,"nodeType":"54","messageId":"55","endLine":2,"endColumn":35},{"ruleId":"52","severity":1,"message":"56","line":32,"column":9,"nodeType":"54","messageId":"55","endLine":32,"endColumn":14},{"ruleId":"52","severity":1,"message":"57","line":1,"column":8,"nodeType":"54","messageId":"55","endLine":1,"endColumn":13},{"ruleId":"58","severity":1,"message":"59","line":7,"column":3,"nodeType":"60","messageId":"61","endLine":39,"endColumn":3},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"52","severity":1,"message":"57","line":1,"column":8,"nodeType":"54","messageId":"55","endLine":1,"endColumn":13},{"ruleId":"58","severity":1,"message":"59","line":7,"column":3,"nodeType":"60","messageId":"61","endLine":39,"endColumn":3},{"ruleId":"62","replacedBy":"66"},{"ruleId":"64","replacedBy":"67"},{"ruleId":"52","severity":1,"message":"53","line":2,"column":26,"nodeType":"54","messageId":"55","endLine":2,"endColumn":35},{"ruleId":"52","severity":1,"message":"68","line":43,"column":11,"nodeType":"54","messageId":"55","endLine":43,"endColumn":23},{"ruleId":"52","severity":1,"message":"56","line":49,"column":9,"nodeType":"54","messageId":"55","endLine":49,"endColumn":14},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'store' is assigned a value but never used.","'React' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-native-reassign",["69"],"no-negated-in-lhs",["70"],["69"],["70"],"'handleSubmit' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]